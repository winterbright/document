web.xml：
	<!-- 加载spring的applicationContext.xml有两种方法：一、默认在/WEB-INF下名称为applicationContext.xml
		二、放到classpath下，通过在web.xml中加入<context-param>来指明文件的路径和名称 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml,classpath:webservice-*.xml</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

applicationContext.xml：
	<!-- 加载配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:deploy_config.properties</value>
			</list>
		</property>
	</bean>

	<!-- 引入hibernate配置 -->
	<import resource="classpath:hibernate.xml"/> 

	<!-- 引入beans配置 -->
	<import resource="classpath:service-beans.xml"/>
	
	<!-- 定义事务 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 定义事务特性 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED"/>
			<tx:method name="*" rollback-for="com.itecheasy.dm.BussinessException" />
		</tx:attributes>
	</tx:advice>

	<!-- 定义切面 -->
	<aop:config>
		<aop:pointcut id="all" expression="(execution(* com.itecheasy.dm.*.*ServiceImpl.*(..)) ) || (  execution(* com.itecheasy.common.asynemail.*ServiceImpl.*(..))  )"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="all"/>
	</aop:config>

	<!-- 定义数据源：DBCP -->
	<bean id="dataSource"  
		class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close"> 
		<property name="driverClassName" value="${jdbc_driverClassName}" />
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />
	  	<property name="maxActive" value="100" />
	  	<property name="maxIdle" value="20" />
	  	<property name="maxWait" value="5000" />  
	</bean>

	<!-- 定义sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
		    <list>
		        <value>com.itecheasy.dm.po</value>
		    </list>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.itecheasy.common.po.Email2SendPO</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<!-- Database settings  -->
				<prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.show_sql">false</prop> 
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<!--
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
				-->				
			</props>
		</property>
	</bean>